import React from "react";
import { Col, Button } from "react-bootstrap";
import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";
import css from "../Products/BuyForm.module.css";
import style from "../Products/Product.module.css";

const validationSchema = Yup.object().shape({
  name: Yup.string()
    .min(3, "–Ü–º'—è –º–∞—î –±—É—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 3 —Å–∏–º–≤–æ–ª—ñ–≤")
    .max(32, "–Ü–º'—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–≤—à–∏–º –∑–∞ 50 —Å–∏–º–≤–æ–ª–∏")
    .matches(
      /^[a-zA-Z–∞-—è–ê-–Ø—ë–Å—ñ–Ü—ó–á—î–Ñ“ë“ê\s]+$/,
      "–Ü–º'—è –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –ª–∏—à–µ –ª—ñ—Ç–µ—Ä–∏ —Ç–∞ –ø—Ä–æ–±—ñ–ª–∏"
    )
    .required("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è"),

  phone: Yup.string()
    .matches(/^\d{10}$/, "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É")
    .required("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"),

  review: Yup.string()
    .max(500, "–í—ñ–¥–≥—É–∫ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–≤—à–∏–º –∑–∞ 500 —Å–∏–º–≤–æ–ª—ñ–≤")
    .required("–ó–∞–ª–∏—à—Ç–µ –í–∞—à –≤—ñ–¥–≥—É–∫"),
});

const ReviewForm = ({ reviewModal, setReviewResult }) => {
  const handleSubmit = async (values, { resetForm }) => {
    const message = `
      üõí –ù–æ–≤–∏–π –≤—ñ–¥–≥—É–∫:!
      üë§ –Ü–º'—è: ${values.name}
      üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${values.phone}
      üí¨ –í—ñ–¥–≥—É–∫: ${values.review || "–ù–µ–º–∞—î"}
    `;

    try {
      const response = await fetch(
        "https://sparkling-treacle-fe54b9.netlify.app/.netlify/functions/sendMessage",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            chat_id: "5141047645",
            text: message,
            parse_mode: "HTML",
          }),
        }
      );

      await response.json();

      if (response.ok) {
        setReviewResult(
          "–î—è–∫—É—î–º–æ! –í–∞—à –≤—ñ–¥–≥—É–∫ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ, –Ω–µ–∑–∞–±–∞—Ä–æ–º –≤—ñ–Ω –æ–ø—É–±–ª—ñ–∫—É—î—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç—ñ."
        );
      } else {
        setReviewResult("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.");
      }
    } catch (error) {
      setReviewResult("–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.");
    } finally {
      setTimeout(() => {
        reviewModal(false);
      }, 5000);

      resetForm();

      setTimeout(() => {
        setReviewResult("");
      }, 6000);
    }
  };

  return (
    <Formik
      initialValues={{
        phone: "",
        name: "",
        review: "",
      }}
      validationSchema={validationSchema}
      onSubmit={handleSubmit}
    >
      <Col className="ps-1 pe-1">
        <Form className={`pb-1 px-4 ${css.form}`} autoComplete="off">
          <div className="text-center fs-5">
            <b>
              –í—ñ–¥–≥—É–∫ –º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏ –ª–∏—à–µ –ø—ñ—Å–ª—è –ø–æ–∫—É–ø–∫–∏ –≤ –Ω–∞—à–æ–º—É
              —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—ñ!
            </b>
          </div>
          <br />
          <label className={css.label} htmlFor="phone">
            –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –∑–∞ —è–∫–∏–º –æ—Ñ–æ—Ä–º–ª—é–≤–∞–ª–æ—Å—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            <Field
              type="text"
              name="phone"
              id="phone"
              placeholder="0934057570"
            />
            <ErrorMessage
              name="phone"
              component="div"
              className="text-danger"
            />
          </label>
          <label className={css.label} htmlFor="name">
            –í–∞—à–µ —ñ–º'—è
            <Field type="text" name="name" id="name" />
            <ErrorMessage name="name" component="div" className="text-danger" />
          </label>
          <label className={css.label} htmlFor="review">
            –ù–∞–ø–∏—à—ñ—Ç—å —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫
            <Field as="textarea" type="text" name="review" id="review" />
            <ErrorMessage
              name="review"
              component="div"
              className="text-danger"
            />
          </label>
          <Col className="d-flex justify-content-evenly mt-4">
            <Button className={style.buyBtn} type="submit">
              –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫
            </Button>
          </Col>
        </Form>
      </Col>
    </Formik>
  );
};

export default ReviewForm;
